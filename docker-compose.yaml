networks:
  application:
    driver: bridge

services:
  backend:
    build:
      context: ./auth-app
      dockerfile: Dockerfile.backend
    container_name: auth-backend
    ports:
      - "8000:8000"
    volumes:
      - type: bind
        source: ./auth-app/app
        target: /var/www/html/app
        consistency: cached
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=postgresdb
      - VITE_URL="http://frontend:5173"  # Aponta para o servi√ßo frontend
    networks:
      - application
    working_dir: /var/www/html

  # frontend:
  #   build:
  #     context: ./auth-app
  #     dockerfile: Dockerfile.frontend
  #   container_name: auth-frontend
  #   ports:
  #     - "5173:5173"
  #   volumes:
  #     - type: bind
  #       source: ./auth-app/src
  #       target: /app/src
  #       consistency: cached
  #   networks:
  #     - application
  #   working_dir: /app

  db:
    image: postgres:17
    ports:
      - "5432:5432"
    volumes:
      - ./data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE}
    networks:
      - application
    container_name: postgresdb
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USERNAME:-postgres}" ]
      interval: 5s
      timeout: 5s
      retries: 5